"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var escape_string_regexp_1 = __importDefault(require("escape-string-regexp"));
/**
 * Interpret \#, \##, and \### escape sequences as Octal, not Decimal.
 * Transform them to their basic character equivalents.
 * Workaround for https://github.com/DmitrySoshnikov/regexp-tree/issues/74.
 */
var decimalCharToSimpleCharTransform = {
    Char: function (charPath) {
        var char = charPath.node;
        if (char.kind !== 'decimal') {
            return;
        }
        var decimalAsOctal = parseInt(char.codePoint.toString(), 8);
        var convertedDecimalAsChar = String.fromCodePoint(decimalAsOctal);
        var charEscaped = escape_string_regexp_1["default"](convertedDecimalAsChar);
        var simpleChar = {
            codePoint: char.codePoint,
            kind: 'simple',
            symbol: charEscaped,
            type: 'Char',
            // parse() will reevaluate this value, so update it to something
            // that will match as a simple char on the next traversal.
            value: charEscaped
        };
        charPath.replace(simpleChar);
    }
};
exports["default"] = decimalCharToSimpleCharTransform;
//# sourceMappingURL=decimal-char-to-simple-char-transform.js.map