"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.expandDisjunction = void 0;
var Expansion_1 = __importDefault(require("../Expansion"));
var iterate_sorted_1 = require("../helpers/iterate-sorted");
/**
 * Expand an expression which represents one of two options, like "(a|b}"
 * or "([0-5]|8+)".
 * If a regular expression has more than two options, like "(a|b|c|d)",
 * it will be parsed as multiple disjunctions like "(a|(b|(c|d)))"
 * @param node The Disjunction expression to expand
 * @return The Expansion of node
 */
function expandDisjunction(node) {
    var _this = this;
    var expressions = [node.left, node.right];
    var expansions = expressions.map(function (e) { return _this.expandExpression(e); });
    var expandBothSides = function () { return iterate_sorted_1.iterateWeightedByCount(expansions); };
    var iterationsSum = expansions[0].count + expansions[1].count;
    return new Expansion_1["default"](expandBothSides, iterationsSum);
}
exports.expandDisjunction = expandDisjunction;
//# sourceMappingURL=disjunction-pattern.js.map