import { Alternative, Assertion, Backreference, CapturingGroup, Char, CharacterClass, ClassRange, Disjunction, Expression, Group, NamedBackreference, NumericBackreference, Quantifier, RangeQuantifier, Repetition, SimpleChar, SimpleQuantifier, SpecialChar } from 'regexp-tree/ast';
export declare function isAlternative(node: Expression): node is Alternative;
export declare function isAssertion(node: Expression): node is Assertion;
export declare function isBackreference(node: Expression): node is Backreference;
export declare function isCapturingGroup(node: Group): node is CapturingGroup;
export declare function isChar(node: Expression): node is Char;
export declare function isCharacterClass(node: Expression): node is CharacterClass;
export declare function isClassRange(node: CharacterClass['expressions'][0]): node is ClassRange;
export declare function isDisjunction(node: Expression): node is Disjunction;
export declare function isGroup(node: Expression): node is Group;
export declare function isNamedBackreference(node: Backreference): node is NamedBackreference;
export declare function isNumericBackreference(node: Backreference): node is NumericBackreference;
export declare function isMetaChar(char: Char): char is SpecialChar;
export declare function isRangeQuantifier(quantifier: Quantifier): quantifier is RangeQuantifier;
export declare function isRepetition(node: Expression): node is Repetition;
export declare function isSimpleChar(char: Char): char is SimpleChar;
export declare function isSimpleQuantifier(quantifier: Quantifier): quantifier is SimpleQuantifier;
